/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>
#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define GAME    3

&lt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
};

&caps_word {
    continue-list = <UNDERSCORE LSHFT MINUS BACKSPACE>;
    mods = <(MOD_LSFT)>;
};

/ {
        behaviors {
            td_semi_prefix: td_semi_prefix {
                compatible = "zmk,behavior-tap-dance";
                #binding-cells = <0>;
                tapping-term-ms = <200>;
                bindings = <&kp SEMI>, <&kp LC(T)>;
            };
            mtd_kp_semi_prefix: mtd_kp_semi_prefix {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                flavor = "tap-preferred";
                quick-tap-ms = <200>;
                bindings = <&kp>, <&td_semi_prefix>;
            }
        };
        combos {
            compatible = "zmk,combos";
            combo_esc {
                timeout-ms = <100>; 
                key-positions = <19 20>; 
                bindings = <&kp ESC>;
                layers = <0>;
            };
            combo_game_mode {
                timeout-ms = <70>; 
                key-positions = <19 20 21 22>; 
                bindings = <&tog GAME>;
                layers = <0 3>;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
        &kp GRAVE  &kp Q         &kp W       &kp E      &kp R      &kp T        &kp Y  &kp U       &kp I      &kp O       &kp P          &kp BSLH
        &caps_word &mt LSHIFT A  &mt LCTRL S &mt LALT D &mt LGUI F &kp G        &kp H  &mt RGUI J  &mt RALT K &mt RCTRL L &mtd_kp_semi_prefix RSHIFT 0    &kp SQT
        &kp MINUS  &kp Z         &kp X       &kp C      &kp V      &kp B        &kp N  &kp M       &kp COMMA  &kp DOT     &kp FSLH       &kp EQUAL
                                 &kp LBKT &lt RAISE TAB &lt LOWER SPACE        &lt LOWER RET &kp BSPC &kp RBKT
                        >;
                };

                lower_layer {
                        bindings = <
   &trans     &kp EXCL &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS &kp ASTRK &kp LPAR  &kp RPAR  &trans
   &trans     &kp N1   &kp N2  &kp N3    &kp N4    &kp N5       &kp N6     &kp N7   &kp N8    &kp N9    &kp N0    &trans
   &trans     &none    &none   &none     &kp LBRC  &kp LBKT     &kp RBKT   &kp RBRC &trans    &trans    &trans    &trans
                            &kp RAISE    &trans    &kp SPACE    &kp RET  &trans  &sl RAISE
                        >;
                };

                raise_layer {
                        bindings = <
   &kp  F1   &kp F2   &kp F3         &kp F4       &kp F5  &kp F6           &kp F7   &kp F8   &kp F9  &kp F10      &kp F11 &kp F12
   &none     &none    &none          &msc SCRL_UP        &mkp LCLK   &kp LCAPS        &kp LEFT &kp DOWN &kp UP  &kp RIGHT    &none   &none
   &none     &none    &none          &msc SCRL_DOWN        &mkp RCLK   &mkp MCLK           &bt BT_NXT    &bt BT_PRV    &bt BT_CLR    &bt BT_CLR_ALL       &none   &none
                                      &trans &trans   &kp SPACE            &kp RET   &trans    &trans
                        >;
                };

                game_layer {
                        bindings = <
        &kp GRAVE  &kp Q         &kp W       &kp E      &kp R      &kp T        &kp Y  &kp U       &kp I      &kp O       &kp P          &kp BSLH
        &kp M      &kp A         &kp S       &kp D      &kp F      &kp G        &kp H  &kp J       &kp K      &kp L       &kp SEMI       &kp SQT
        &kp MINUS  &kp Z         &kp X       &kp C      &kp V      &kp B        &kp N  &kp M       &kp COMMA  &kp DOT     &kp FSLH       &kp EQUAL
                                              &kp LBKT &kp TAB &kp SPACE        &kp RET &kp BSPC &kp RBKT
                        >;
                };
        };
};
